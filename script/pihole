#!/usr/bin/env bash
set -e

state=$(docker inspect --format "{{.State.Running}}" pihole 2>/dev/null || true)

[ "$state" == "false" ] && docker rm pihole 2>/dev/null

if [ "$state" != "true" ]; then
    docker run -d \
        --name pihole \
        -p 53:53/tcp \
        -p 53:53/udp \
        -p 80:80 \
        -p 443:443 \
        -e TZ="America/Chicago" \
        -e DNS1=1.1.1.1 -e DNS2=1.0.0.1 -e DNSSEC=True \
        -v "$HOME/.config/pihole/pihole/:/etc/pihole/" \
        -v "$HOME/.config/pihole/dnsmasq/:/etc/dnsmasq.d/" \
        --dns=127.0.0.1 --dns=1.1.1.1 \
        --restart=unless-stopped \
        pihole/pihole:latest
fi

printf 'Starting up pihole'
for i in $(seq 1 20); do
    if [ "$(docker inspect -f "{{.State.Health.Status}}" pihole)" == "healthy" ] ; then
        printf ' OK'
        echo -e "\n$(docker logs pihole 2>/dev/null | grep 'Setting password:') for your pi-hole: http://pi.hole/admin/"
        break
    else
        sleep 3
        printf '.'
    fi

    if [ "$i" -eq 20 ] ; then
        echo -e "\nTimed out waiting for Pi-hole start, consult check your container logs for more info (\`docker logs pihole\`)"
        exit 1
    fi
done

echo "Setting pi-hole as your DNS server for Wi-Fi"
networksetup -setdnsservers "Wi-Fi" 127.0.0.1
