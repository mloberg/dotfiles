#!/usr/bin/env bash
#
# bootstrap installs things.

source "$(dirname "$0")/functions"

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd)

set -e

echo ''

setup_gitconfig () {
    if ! [ -f git/gitconfig.symlink ]
    then
        info 'setup gitconfig'

        git_credential='cache'
        if [ "$(uname -s)" == "Darwin" ]
        then
            git_credential='osxkeychain'
        fi

        user ' - What is your github author name?'
        read -e git_authorname
        user ' - What is your github author email?'
        read -e git_authoremail

        sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.symlink.example > git/gitconfig.symlink

        success 'gitconfig'
    fi
}

install_dotfiles () {
    info 'installing dotfiles'

    local overwrite_all=false backup_all=false skip_all=false

    for src in $(find "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink' ! -path '*/linux/*' ! -path '*/darwin/*')
    do
        dst="$HOME/.$(basename "${src%.*}")"
        link_file "$src" "$dst"
    done
}

install_os_dotfiles () {
    os="$(uname -s | awk '{print tolower($0)}')"

    if [ -d "${DOTFILES_ROOT}/${os}" ]; then
        info "installing ${os} specific dotfiles"

        local overwrite_all=false backup_all=false skip_all=false

        for src in $(find "$DOTFILES_ROOT/$os" -maxdepth 2 -name '*.symlink')
        do
            dst="$HOME/.$(basename "${src%.*}")"
            link_file "$src" "$dst"
        done
    fi
}

git submodule init
git submodule update
setup_gitconfig
install_dotfiles
install_os_dotfiles

echo ''
echo '  All installed!'
